// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementSystem.Infrastructure.Data;

#nullable disable

namespace UserManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250620115916_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserManagementSystem.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionName = "Users.Read"
                        },
                        new
                        {
                            Id = 2,
                            PermissionName = "Users.Create"
                        },
                        new
                        {
                            Id = 3,
                            PermissionName = "Users.Update"
                        },
                        new
                        {
                            Id = 4,
                            PermissionName = "Users.Delete"
                        },
                        new
                        {
                            Id = 5,
                            PermissionName = "Permissions.Read"
                        },
                        new
                        {
                            Id = 6,
                            PermissionName = "Permissions.Manage"
                        });
                });

            modelBuilder.Entity("UserManagementSystem.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$SomeFixedSaltExampleHashForAdminUser...",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "viewer@example.com",
                            PasswordHash = "$2a$11$AnotherFixedSaltExampleHashForViewer...",
                            UserName = "viewer"
                        });
                });

            modelBuilder.Entity("UserManagementSystem.Domain.Entities.UserPermission", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            UserId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            UserId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            UserId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            UserId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            UserId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            UserId = 2,
                            PermissionId = 1
                        });
                });

            modelBuilder.Entity("UserManagementSystem.Domain.Entities.UserPermission", b =>
                {
                    b.HasOne("UserManagementSystem.Domain.Entities.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagementSystem.Domain.Entities.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementSystem.Domain.Entities.Permission", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("UserManagementSystem.Domain.Entities.User", b =>
                {
                    b.Navigation("UserPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
